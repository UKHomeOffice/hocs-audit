---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hocs-audit
  labels:
    version: {{.VERSION}}
  annotations:
    downscaler/uptime: {{.UPTIME_PERIOD}}
spec:
  replicas: {{.MIN_REPLICAS}}
  selector:
    matchLabels:
      name: hocs-audit
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: hocs-audit
        role: hocs-backend
        version: {{.VERSION}}
    spec:
      imagePullSecrets:
        - name: registry-credentials
      initContainers:
        - name: truststore
          image: quay.io/ukhomeofficedigital/cfssl-sidekick-jks:v0.0.9
          securityContext:
            runAsNonRoot: true
            capabilities:
              drop:
                - SETUID
                - SETGID
          args:
            - --certs=/certs
            - --command=/usr/bin/create-keystore.sh /certs/tls.pem /certs/tls-key.pem /etc/ssl/certs/acp-root.crt
            - --domain=hocs-audit.${KUBE_NAMESPACE}.svc.cluster.local
            - --domain=localhost
            - --onetime=true
          env:
            - name: KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          volumeMounts:
            - name: certs
              mountPath: /certs
            - name: keystore
              mountPath: /etc/keystore
            - name: bundle
              mountPath: /etc/ssl/certs
              readOnly: true
          resources:
            limits:
              memory: 96Mi
              cpu: 900m
            requests:
              memory: 96Mi
              cpu: 300m

      containers:
        - name: keycloak-proxy
          image: quay.io/keycloak/keycloak-gatekeeper:8.0.2
          securityContext:
            runAsNonRoot: true
          resources:
            limits:
              memory: 96Mi
              cpu: 400m
            requests:
              memory: 96Mi
              cpu: 100m
          env:
            - name: ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: hocs-frontend
                  key: encryption_key
          args:
            - --config=/etc/secrets/data.yml
            - --discovery-url={{.KC_REALM}}
            - --openid-provider-proxy=http://hocs-outbound-proxy.{{.KUBE_NAMESPACE}}.svc.cluster.local:31290
            - --listen=127.0.0.1:8081
            - --enable-logging=true
            - --enable-json-logging=true
            - --upstream-url=http://127.0.0.1:8080
            - --upstream-response-header-timeout={{.PROXY_TIMEOUT}}s
            - --upstream-expect-continue-timeout={{.PROXY_TIMEOUT}}s
            - --upstream-keepalive-timeout={{.PROXY_TIMEOUT}}s
            - --server-idle-timeout={{.PROXY_TIMEOUT}}s # default 120s
            - --server-read-timeout={{.PROXY_TIMEOUT}}s
            - --server-write-timeout={{.PROXY_TIMEOUT}}s
            - --no-redirects=false
            - --redirection-url=https://{{.DOMAIN_NAME}}
            - --secure-cookie=true
            - --http-only-cookie=true
            - --revocation-url={{.KC_REALM}}/protocol/openid-connect/logout
            - --enable-logout-redirect=true
            - --enable-default-deny=true
            - --resources=uri=/export/MIN*|roles=DCU_EXPORT_USER
            - --resources=uri=/export/TRO*|roles=DCU_EXPORT_USER
            - --resources=uri=/export/DTEN*|roles=DCU_EXPORT_USER
            - --resources=uri=/export/WCS*|roles=WCS_EXPORT_USER
            - --resources=uri=/export/MPAM*|roles=MPAM_EXPORT_USER
            - --resources=uri=/export/MTS*|roles=MPAM_EXPORT_USER
            - --resources=uri=/export/COMP*|roles=COMP_EXPORT_USER
            - --resources=uri=/export/FOI*|roles=FOI_EXPORT_USER
            - --resources=uri=/export/TO*|roles=TO_EXPORT_USER
            - --resources=uri=/export/BF*|roles=BF_EXPORT_USER
            - --resources=uri=/export/IEDET*|roles=IEDET_EXPORT_USER
            - --resources=uri=/export/POGR*|roles=POGR_EXPORT_USER
            - --resources=uri=/export/somu/FOI*|roles=FOI_EXPORT_USER
            - --resources=uri=/export/somu/MPAM*|roles=MPAM_EXPORT_USER
            - --resources=uri=/export/somu/COMP*|roles=COMP_EXPORT_USER
            - --resources=uri=/export/somu/TO*|roles=TO_EXPORT_USER
            - --resources=uri=/export/somu/BF*|roles=BF_EXPORT_USER
            - --resources=uri=/export/somu/POGR*|roles=POGR_EXPORT_USER
            - --resources=uri=/export/topics*|roles=DCU_EXPORT_USER,FOI_EXPORT_USER|require-any-role=true
            - --resources=uri=/export/teams*|roles=DCU_EXPORT_USER,WCS_EXPORT_USER,MPAM_EXPORT_USER,COMP_EXPORT_USER,FOI_EXPORT_USER,IEDET_EXPORT_USER,BF_EXPORT_USER,POGR_EXPORT_USER|require-any-role=true
            - --resources=uri=/export/users*|roles=DCU_EXPORT_USER,WCS_EXPORT_USER,MPAM_EXPORT_USER,COMP_EXPORT_USER,FOI_EXPORT_USER,IEDET_EXPORT_USER,BF_EXPORT_USER,POGR_EXPORT_USER|require-any-role=true
            - --resources=uri=/export/custom/*/refresh|methods=POST|white-listed=true
            - --verbose
            - --enable-refresh-tokens=true
            - --encryption-key=$(ENCRYPTION_KEY)
            - --cookie-domain={{.DOMAIN_NAME}}
          ports:
            - name: keycloak-http
              containerPort: 8081
          volumeMounts:
            - mountPath: /etc/secrets
              name: frontend-keycloak-secret
              readOnly: true

        - name: proxy
          image: quay.io/ukhomeofficedigital/nginx-proxy:v4.2.0
          securityContext:
            runAsNonRoot: true
            capabilities:
              drop:
                - SETUID
                - SETGID
          env:
            - name: HTTP2
              value: 'TRUE'
            - name: PROXY_SERVICE_HOST_1
              value: '127.0.0.1'
            - name: PROXY_SERVICE_PORT_1
              value: '8080'
            - name: PROXY_SERVICE_HOST_2
              value: '127.0.0.1'
            - name: PROXY_SERVICE_PORT_2
              value: '8081'
            - name: LOCATIONS_CSV
              value: '/, /export/'
            - name: NAXSI_USE_DEFAULT_RULES
              value: 'FALSE'
            - name: ENABLE_UUID_PARAM
              value: 'FALSE'
            - name: HTTPS_REDIRECT
              value: 'FALSE'
            - name: BASIC_AUTH_1
              value: /etc/nginx/authsecrets/htpasswd
            - name: SERVER_CERT
              value: /certs/tls.pem
            - name: SERVER_KEY
              value: /certs/tls-key.pem
            - name: ADD_NGINX_SERVER_CFG
              value: 'location = /reload { allow 127.0.0.1; deny all; content_by_lua_block { os.execute("touch /tmp/nginx-reload-triggered; /usr/local/openresty/nginx/sbin/nginx -s reload; touch /tmp/nginx-reload-complete;") } }'
            - name: ADD_NGINX_HTTP_CFG
              value: >
                client_header_buffer_size 8k;
                fastcgi_buffer_size 128k;
                fastcgi_buffers 16 64k;
                large_client_header_buffers 4 128k;
                proxy_buffer_size 128k;
                proxy_buffers 4 64k;
                proxy_busy_buffers_size 128k;
                proxy_connect_timeout {{.PROXY_TIMEOUT}};
                proxy_read_timeout {{.PROXY_TIMEOUT}};
                proxy_send_timeout {{.PROXY_TIMEOUT}};
          volumeMounts:
            - name: certs
              mountPath: /certs
              readOnly: true
            - name: secrets
              mountPath: /etc/nginx/secrets
              readOnly: true
            - name: auth-secrets
              mountPath: /etc/nginx/authsecrets
              readOnly: true
          ports:
            - name: https
              containerPort: 10443
          resources:
            limits:
              memory: 96Mi
              cpu: 400m
            requests:
              memory: 96Mi
              cpu: 100m

        - name: hocs-audit
          image: quay.io/ukhomeofficedigital/hocs-audit:{{.VERSION}}
          securityContext:
            runAsNonRoot: true
            capabilities:
              drop:
                - SETUID
                - SETGID
          envFrom:
            - configMapRef:
                name: hocs-queue-config
          env:
            - name: JAVA_OPTS
              value: '-Xms1024m -Xmx1024m -Djavax.net.ssl.trustStore=/etc/keystore/truststore.jks -Dhttps.proxyHost=hocs-outbound-proxy.{{.KUBE_NAMESPACE}}.svc.cluster.local -Dhttps.proxyPort=31290 -Dhttp.nonProxyHosts=*.{{.KUBE_NAMESPACE}}.svc.cluster.local'
            - name: JDK_TRUST_FILE
              value: '/etc/keystore/truststore.jks'
            - name: SERVER_PORT
              value: '8080'
            - name: SPRING_PROFILES_ACTIVE
              value: 'sqs'
            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{.KUBE_NAMESPACE}}-audit-rds
                  key: host
            - name: DB_PORT
              valueFrom:
                secretKeyRef:
                  name: {{.KUBE_NAMESPACE}}-audit-rds
                  key: port
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{.KUBE_NAMESPACE}}-audit-rds
                  key: name
            - name: DB_SCHEMA_NAME
              valueFrom:
                secretKeyRef:
                  name: {{.KUBE_NAMESPACE}}-audit-rds
                  key: schema_name
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{.KUBE_NAMESPACE}}-audit-rds
                  key: user_name
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{.KUBE_NAMESPACE}}-audit-rds
                  key: password
            - name: AUDIT_QUEUE_NAME
              value: {{.KUBE_NAMESPACE}}-audit-sqs
            - name: AWS_SQS_AUDIT_URL
              valueFrom:
                secretKeyRef:
                  name: {{.KUBE_NAMESPACE}}-audit-sqs
                  key: sqs_queue_url
            - name: AWS_SQS_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{.KUBE_NAMESPACE}}-audit-sqs
                  key: access_key_id
            - name: AWS_SQS_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{.KUBE_NAMESPACE}}-audit-sqs
                  key: secret_access_key
            - name: HOCS_INFO_SERVICE
              value: 'https://hocs-info-service.{{.KUBE_NAMESPACE}}.svc.cluster.local'
            - name: HOCS_CASE_SERVICE
              value: 'https://hocs-casework.{{.KUBE_NAMESPACE}}.svc.cluster.local'
            - name: HOCS_BASICAUTH
              valueFrom:
                secretKeyRef:
                  name: ui-casework-creds
                  key: plaintext
          resources:
            limits:
              cpu: 2000m
              memory: 1792Mi
            requests:
              cpu: 350m
              memory: 1792Mi
          ports:
            - name: http
              containerPort: 8080
          startupProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
              httpHeaders:
                - name: X-probe
                  value: kubelet
            initialDelaySeconds: 6
            periodSeconds: 2
            failureThreshold: 22
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: http
              httpHeaders:
                - name: X-probe
                  value: kubelet
            periodSeconds: 2
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: http
              httpHeaders:
                - name: X-probe
                  value: kubelet
            periodSeconds: 2
          volumeMounts:
            - mountPath: /etc/keystore
              name: keystore
              readOnly: true
          lifecycle:
            preStop:
              exec:
                command: [ "sh", "-c", "sleep 20" ]
      volumes:
        - name: keystore
          emptyDir:
            medium: "Memory"
        - name: certs
          emptyDir:
            medium: "Memory"
        - name: bundle
          configMap:
            name: bundle
        - name: secrets
          emptyDir:
            medium: "Memory"
        - name: auth-secrets
          secret:
            secretName: ui-casework-creds
        - name: frontend-keycloak-secret
          secret:
            secretName: frontend-keycloak-secret
