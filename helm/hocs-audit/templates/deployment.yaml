apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hocs-app.name" . }}
  labels:
    version: {{ .Values.version }}
  {{- with .Values.deploymentAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.minReplicas }}
  selector:
    matchLabels:
      name: {{ include "hocs-app.name" . }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        {{- include "hocs-app.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: truststore
          image: "{{ .Values.truststore.image.repository }}:{{ .Values.truststore.image.version }}"
          securityContext:
            {{- include "hocs-app.securityContext" . | nindent 12 }}
          args:
            {{ include "truststore.envs" . | nindent 12 }}
          volumeMounts:
            - name: certs
              mountPath: /certs
            - name: keystore
              mountPath: /etc/keystore
            - name: bundle
              mountPath: /etc/ssl/certs
              readOnly: true
          resources:
            {{- toYaml .Values.truststore.resources | nindent 12 }}

      containers:
        - name: keycloak-proxy
          image: "{{ .Values.keycloak.image.repository }}:{{ .Values.keycloak.image.version }}"
          securityContext:
            {{- include "hocs-app.securityContext" . | nindent 12 }}
          env:
            {{ include "keycloak.envs" . | nindent 12 }}
          args:
            {{ include "keycloak.args" . | nindent 12 }}
          volumeMounts:
            - mountPath: /etc/secrets
              name: frontend-keycloak-secret
              readOnly: true
          ports:
            - name: {{ .Values.service.portName }}
              containerPort: {{ .Values.keycloak.port }}
          resources:
            {{- toYaml .Values.keycloak.resources | nindent 12 }}

        - name: proxy
          image: "{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.version }}"
          securityContext:
            {{- include "hocs-app.securityContext" . | nindent 12 }}
          env:
            {{ include "proxy.envs" . | nindent 12 }}
          volumeMounts:
            - name: certs
              mountPath: /certs
              readOnly: true
            - name: secrets
              mountPath: /etc/nginx/secrets
              readOnly: true
            - name: auth-secrets
              mountPath: /etc/nginx/authsecrets
              readOnly: true
          ports:
            - name: {{ .Values.service.portName }}
              containerPort: {{ .Values.service.targetPort }}
          resources:
            {{- toYaml .Values.proxy.resources | nindent 12 }}

        - name: {{ include "hocs-app.name" . }}
          image: "{{ .Values.app.image.repository }}:{{ .Values.version }}"
          securityContext:
            {{- include "hocs-app.securityContext" . | nindent 12 }}
          envFrom:
            - configMapRef:
                name: hocs-queue-config
          env:
            {{ include "deployment.envs" . | nindent 12 }}
          resources:
            {{- toYaml .Values.app.resources | nindent 12 }}
          ports:
            - name: {{ .Values.service.portName }}
              containerPort: {{ .Values.app.port }}
          {{ include "healthcheck.envs" . | nindent 10 }}
          volumeMounts:
            {{ include "volumeMounts.envs" . | nindent 12 }}
          lifecycle:
            preStop:
              exec:
                command: {{ .Values.app.preStop }}
      volumes:
        {{ include "volumes.envs" . | nindent 8 }}
